

HI-TECH Software PIC PRO Macro Assembler V9.71 build 6379 
                                                                                               Thu Aug 23 14:38:39 2018

HI-TECH Software Omniscient Code Generator (PRO mode) build 6379
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	pm
     4                           	psect	text69,local,class=CODE,delta=2
     5                           	psect	strings,global,class=STRING,delta=2
     6                           	psect	cinit,global,class=CODE,delta=2
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	maintext,global,class=CODE,delta=2
     9                           	psect	text71,local,class=CODE,delta=2
    10                           	psect	text75,local,class=CODE,delta=2
    11                           	psect	text76,local,class=CODE,delta=2
    12                           	psect	pa_nodes,global,class=CODE,delta=2
    13                           	dabs	1,0x7E,2
    14  000A                     
    15                           	psect	text69
    16  0000                     __ptext69:	
    17  001F                     _ADCON0	set	31
    18  001E                     _ADRESH	set	30
    19  0008                     _PORTD	set	8
    20  0066                     _ADIF	set	102
    21  0040                     _RD0	set	64
    22  0041                     _RD1	set	65
    23  009F                     _ADCON1	set	159
    24  009E                     _ADRESL	set	158
    25  0085                     _TRISA	set	133
    26  0088                     _TRISD	set	136
    27  0089                     _TRISE	set	137
    28  04A2                     _RW	set	1186
    29                           
    30                           	psect	strings
    31  0003                     __pstrings:	
    32  0003                     stringtab:	;	global	stringdir,stringtab,__stringbase
    33                           
    34                           ;	String table - string pointers are 1 byte each
    35  0003  1BFF               	btfsc	btemp+1,7
    36  0004  280D               	ljmp	stringcode
    37  0005  1383               	bcf	3,7
    38  0006  187F               	btfsc	btemp+1,0
    39  0007  1783               	bsf	3,7
    40  0008  0800               	movf	0,w
    41  0009  0A84               	incf	4,f
    42  000A  1903               	skipnz
    43  000B  0AFF               	incf	btemp+1,f
    44  000C  0008               	return
    45  000D                     stringcode:	
    46  000D                     stringdir:	
    47  000D  3000               	movlw	high stringdir
    48  000E  008A               	movwf	10
    49  000F  0804               	movf	4,w
    50  0010  0A84               	incf	4,f
    51  0011  0782               	addwf	2,f
    52  0012                     __stringbase:	
    53  0012  3400               	retlw	0
    54  0013                     STR_1:	
    55  0013  3438               	retlw	56	;'8'
    56  0014  3420               	retlw	32	;' '
    57  0015  3463               	retlw	99	;'c'
    58  0016  3468               	retlw	104	;'h'
    59  0017  3420               	retlw	32	;' '
    60  0018  3441               	retlw	65	;'A'
    61  0019  3444               	retlw	68	;'D'
    62  001A  3443               	retlw	67	;'C'
    63  001B  3400               	retlw	0
    64                           
    65                           	psect	cinit
    66  0757                     start_initialization:	
    67  0757                     end_of_initialization:	;End of C runtime variable initationation code
    68                           
    69  0757  0183               	clrf	3
    70  0758  120A  118A  2F61   	ljmp	_main	;jump to C main() function
    71                           
    72                           	psect	cstackCOMMON
    73  0070                     __pcstackCOMMON:	
    74  0070                     ?_lcd_data:	
    75  0070                     ?_lcd_command:	; 0 bytes @ 0x0
    76                           
    77  0070                     ?_delay:	; 0 bytes @ 0x0
    78                           
    79  0070                     ??_adc_read:	; 0 bytes @ 0x0
    80                           
    81  0070                     ?_adc_read:	; 0 bytes @ 0x0
    82                           
    83  0070                     ?_lcd_initialize:	; 0 bytes @ 0x0
    84                           
    85  0070                     ?_main:	; 0 bytes @ 0x0
    86                           
    87  0070                     delay@a:	; 0 bytes @ 0x0
    88                           
    89                           ; 2 bytes @ 0x0
    90  0070                     	ds	2
    91  0072                     ??_lcd_data:	
    92  0072                     ??_lcd_command:	; 0 bytes @ 0x2
    93                           
    94  0072                     ??_delay:	; 0 bytes @ 0x2
    95                           
    96  0072                     lcd_data@temp1:	; 0 bytes @ 0x2
    97                           
    98  0072                     lcd_command@temp:	; 1 bytes @ 0x2
    99                           
   100                           ; 1 bytes @ 0x2
   101  0072                     	ds	1
   102  0073                     lcd_command@command:	
   103  0073                     lcd_data@data:	; 1 bytes @ 0x3
   104                           
   105                           ; 1 bytes @ 0x3
   106  0073                     	ds	1
   107  0074                     ?_display:	
   108  0074                     ??_lcd_initialize:	; 0 bytes @ 0x4
   109                           
   110  0074                     display@len:	; 0 bytes @ 0x4
   111                           
   112                           ; 1 bytes @ 0x4
   113  0074                     	ds	1
   114  0075                     ??_display:	
   115  0075                     display@word:	; 0 bytes @ 0x5
   116                           
   117                           ; 1 bytes @ 0x5
   118  0075                     	ds	1
   119  0076                     display@a:	
   120                           ; 1 bytes @ 0x6
   121  0076                     	ds	1
   122  0077                     ??_main:	
   123                           
   124                           	psect	maintext
   125  0761                     __pmaintext:	; 0 bytes @ 0x7
   126 ;;Data sizes: Strings 9, constant 0, data 0, bss 0, persistent 0 stack 0
   127 ;;Auto spaces:   Size  Autos    Used
   128 ;; COMMON          14      7       7
   129 ;; BANK0           80      0       0
   130 ;; BANK1           80      0       0
   131 ;; BANK3           96      0       0
   132 ;; BANK2           96      0       0
   133 ;;
   134 ;; Pointer list with targets:
   135 ;; display@word	PTR const unsigned char  size(1) Largest target is 9
   136 ;;		 -> STR_1(CODE[9]), 
   137 ;;
   138 ;; COMMON:	_main->_display
   139 ;; COMMON:	_lcd_initialize->_lcd_command
   140 ;; COMMON:	_display->_lcd_data
   141 ;; Critical Paths (_lcd_command)
   142 ;; COMMON:	_lcd_command->_delay
   143 ;; Critical Paths (_lcd_data)
   144 ;; COMMON:	_lcd_data->_delay
   145 ;;
   146 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   147 ;;
   148 ;;Call Graph Tables:
   149 ;; ---------------------------------------------------------------------------------
   150 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   151 ;; ---------------------------------------------------------------------------------
   152 ;; (2) _main                                                 0     0      0     195
   153 ;;                     _lcd_initialize
   154 ;;                            _display
   155 ;;                              _delay
   156 ;;                           _adc_read
   157 ;; ---------------------------------------------------------------------------------
   158 ;; (1) _lcd_initialize                                       0     0      0      60
   159 ;;                        _lcd_command
   160 ;; ---------------------------------------------------------------------------------
   161 ;; (1) _display                                              3     2      1     120
   162 ;;                                              4 COMMON     3     2      1
   163 ;;                           _lcd_data
   164 ;; ---------------------------------------------------------------------------------
   165 ;; (0) _lcd_command                                          2     2      0      60
   166 ;;                                              2 COMMON     2     2      0
   167 ;;                              _delay
   168 ;; ---------------------------------------------------------------------------------
   169 ;; (0) _lcd_data                                             2     2      0      60
   170 ;;                                              2 COMMON     2     2      0
   171 ;;                              _delay
   172 ;; ---------------------------------------------------------------------------------
   173 ;; (4294967295) _delay                                       2     0      2      15
   174 ;;                                              0 COMMON     2     0      2
   175 ;; ---------------------------------------------------------------------------------
   176 ;; (4294967295) _adc_read                                    2     2      0       0
   177 ;; ---------------------------------------------------------------------------------
   178 ;; Estimated maximum call depth -1
   179 ;; ---------------------------------------------------------------------------------
   180 ;; Call Graph Graphs:
   181 ;; _lcd_command (ROOT)
   182 ;;   _delay
   183 ;;
   184 ;; _lcd_data (ROOT)
   185 ;;   _delay
   186 ;;
   187 ;; Address spaces:
   188 ;;Name               Size   Autos  Total    Cost      Usage
   189 ;;BITCOMMON            E      0       0       0        0.0%
   190 ;;EEDATA             100      0       0       0        0.0%
   191 ;;CODE                 0      0       0       0        0.0%
   192 ;;NULL                 0      0       0       0        0.0%
   193 ;;COMMON               E      7       7       1       50.0%
   194 ;;SFR0                 0      0       0       1        0.0%
   195 ;;BITSFR0              0      0       0       1        0.0%
   196 ;;BITSFR1              0      0       0       2        0.0%
   197 ;;SFR1                 0      0       0       2        0.0%
   198 ;;STACK                0      0       3       2        0.0%
   199 ;;BITBANK0            50      0       0       3        0.0%
   200 ;;BANK0               50      0       0       4        0.0%
   201 ;;SFR3                 0      0       0       4        0.0%
   202 ;;BITSFR3              0      0       0       4        0.0%
   203 ;;SFR2                 0      0       0       5        0.0%
   204 ;;BITSFR2              0      0       0       5        0.0%
   205 ;;DATA                 0      0       0       5        0.0%
   206 ;;BITBANK1            50      0       0       6        0.0%
   207 ;;BANK1               50      0       0       7        0.0%
   208 ;;BANK3               60      0       0       8        0.0%
   209 ;;BANK2               60      0       0       9        0.0%
   210 ;;ABS                  0      0       0      10        0.0%
   211 ;;BITBANK3            60      0       0      11        0.0%
   212 ;;BITBANK2            60      0       0      12        0.0%
   213                           
   214 ;; *************** function _main *****************
   215 ;; Defined at:
   216 ;;		line 11 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\main.c"
   217 ;; Parameters:    Size  Location     Type
   218 ;;		None
   219 ;; Auto vars:     Size  Location     Type
   220 ;;		None
   221 ;; Return value:  Size  Location     Type
   222 ;;		None               void
   223 ;; Registers used:
   224 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   225 ;; Tracked objects:
   226 ;;		On entry : 17F/0
   227 ;;		On exit  : 17F/0
   228 ;;		Unchanged: FFE80/0
   229 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   230 ;;      Params:         0       0       0       0       0
   231 ;;      Locals:         0       0       0       0       0
   232 ;;      Temps:          0       0       0       0       0
   233 ;;      Totals:         0       0       0       0       0
   234 ;;Total ram usage:        0 bytes
   235 ;; Hardware stack levels required when called:    3
   236 ;; This function calls:
   237 ;;		_lcd_initialize
   238 ;;		_display
   239 ;;		_delay
   240 ;;		_adc_read
   241 ;; This function is called by:
   242 ;;		Startup code after reset
   243 ;; This function uses a non-reentrant model
   244 ;;
   245  0761                     _main:	
   246                           ;main.c: 12: TRISD=0x00;
   247                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   248  0761  1683               	bsf	3,5	;RP0=1, select bank1
   249  0762  0188               	clrf	8	;volatile
   250                           ;main.c: 13: TRISA=0xFF;
   251  0763  30FF               	movlw	255
   252  0764  0085               	movwf	5	;volatile
   253                           ;main.c: 14: TRISE=0xFF;
   254  0765  0089               	movwf	9	;volatile
   255                           ;main.c: 15: ADCON1=0x80;
   256  0766  3080               	movlw	128
   257  0767  009F               	movwf	31	;volatile
   258                           ;main.c: 16: ADCON0=0x41;
   259  0768  3041               	movlw	65
   260  0769  1283               	bcf	3,5	;RP0=0, select bank0
   261  076A  009F               	movwf	31	;volatile
   262                           ;main.c: 17: lcd_initialize();
   263  076B  120A  118A  27B7   	fcall	_lcd_initialize
      +       120A  118A         
   264                           ;main.c: 18: display("8 ch ADC",8);
   265  0770  3008               	movlw	8
   266  0771  00F4               	movwf	?_display
   267  0772  3001               	movlw	(STR_1-__stringbase)& (0+255)
   268  0773  120A  118A  2793   	fcall	_display
      +       120A  118A         
   269                           ;main.c: 19: delay(60000);
   270  0778  3060               	movlw	96
   271  0779  00F0               	movwf	?_delay
   272  077A  30EA               	movlw	234
   273  077B  00F1               	movwf	?_delay+1
   274  077C  120A  118A  27DE   	fcall	_delay
      +       120A  118A         
   275  0781                     l1048:	
   276                           ;main.c: 21: {
   277                           ;main.c: 22: delay(1000);
   278  0781  30E8               	movlw	232
   279  0782  00F0               	movwf	?_delay
   280  0783  3003               	movlw	3
   281  0784  00F1               	movwf	?_delay+1
   282  0785  120A  118A  27DE   	fcall	_delay
      +       120A  118A         
   283                           ;main.c: 23: ADCON0=(ADCON0|0x04);
   284  078A  151F               	bsf	31,2	;volatile
   285  078B                     l584:	;main.c: 24: while(ADIF==0);
   286                           
   287  078B  1F0C               	btfss	12,6
   288  078C  2F8B               	goto	l584
   289                           ;main.c: 25: adc_read();
   290  078D  120A  118A  275B   	fcall	_adc_read
      +       120A  118A         
   291  0792  2F81               	goto	l1048
   292  0793                     __end_of_main:	
   293                           
   294                           	psect	text71
   295  0793                     __ptext71:	;; =============== function _lcd_initialize ends ============
   296                           
   297 ;; *************** function _display *****************
   298 ;; Defined at:
   299 ;;		line 56 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\LCD 4 BIT.h"
   300 ;; Parameters:    Size  Location     Type
   301 ;;  word            1    wreg     PTR const unsigned char 
   302 ;;		 -> STR_1(9), 
   303 ;;  len             1    4[COMMON] unsigned char 
   304 ;; Auto vars:     Size  Location     Type
   305 ;;  word            1    5[COMMON] PTR const unsigned char 
   306 ;;		 -> STR_1(9), 
   307 ;;  a               1    6[COMMON] unsigned char 
   308 ;; Return value:  Size  Location     Type
   309 ;;		None               void
   310 ;; Registers used:
   311 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   312 ;; Tracked objects:
   313 ;;		On entry : 17F/0
   314 ;;		On exit  : 17F/0
   315 ;;		Unchanged: FFE80/0
   316 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   317 ;;      Params:         1       0       0       0       0
   318 ;;      Locals:         2       0       0       0       0
   319 ;;      Temps:          0       0       0       0       0
   320 ;;      Totals:         3       0       0       0       0
   321 ;;Total ram usage:        3 bytes
   322 ;; Hardware stack levels used:    1
   323 ;; Hardware stack levels required when called:    3
   324 ;; This function calls:
   325 ;;		_lcd_data
   326 ;; This function is called by:
   327 ;;		_main
   328 ;; This function uses a non-reentrant model
   329 ;;
   330  0793                     _display:	
   331                           ; Regs used in _display: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   332                           ;display@word stored from wreg
   333  0793  00F5               	movwf	display@word
   334                           ;LCD 4 BIT.h: 57: unsigned char a;
   335                           ;LCD 4 BIT.h: 58: for(a=0;a<=len;a++)
   336  0794  01F6               	clrf	display@a
   337  0795                     l1028:	
   338  0795  0876               	movf	display@a,w
   339  0796  0274               	subwf	display@len,w
   340  0797  1C03               	btfss	3,0
   341  0798  0008               	return
   342                           ;LCD 4 BIT.h: 59: {
   343                           ;LCD 4 BIT.h: 60: lcd_data(word[a]);
   344  0799  0876               	movf	display@a,w
   345  079A  0775               	addwf	display@word,w
   346  079B  0084               	movwf	4
   347  079C  120A  118A  200D   	fcall	stringdir
      +       120A  118A         
   348  07A1  27A6  120A  118A   	fcall	_lcd_data
   349  07A4  0AF6               	incf	display@a,f
   350  07A5  2F95               	goto	l1028
   351  07A6                     __end_of_display:	
   352  07A6                     __ptext73:	;; =============== function _lcd_command ends ============
   353                           
   354 ;; *************** function _lcd_data *****************
   355 ;; Defined at:
   356 ;;		line 28 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\LCD 4 BIT.h"
   357 ;; Parameters:    Size  Location     Type
   358 ;;  data            1    wreg     unsigned char 
   359 ;; Auto vars:     Size  Location     Type
   360 ;;  data            1    3[COMMON] unsigned char 
   361 ;;  temp1           1    2[COMMON] unsigned char 
   362 ;; Return value:  Size  Location     Type
   363 ;;		None               void
   364 ;; Registers used:
   365 ;;		wreg, status,2, status,0, pclath, cstack
   366 ;; Tracked objects:
   367 ;;		On entry : 17F/0
   368 ;;		On exit  : 17F/0
   369 ;;		Unchanged: FFE80/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         2       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         2       0       0       0       0
   375 ;;Total ram usage:        2 bytes
   376 ;; Hardware stack levels used:    1
   377 ;; Hardware stack levels required when called:    2
   378 ;; This function calls:
   379 ;;		_delay
   380 ;; This function is called by:
   381 ;;		_display
   382 ;; This function uses a non-reentrant model
   383 ;;
   384  07A6                     _lcd_data:	
   385                           ; Regs used in _lcd_data: [wreg+status,2+status,0+pclath+cstack]
   386                           ;lcd_data@data stored from wreg
   387  07A6  00F3               	movwf	lcd_data@data
   388                           ;LCD 4 BIT.h: 29: unsigned char temp1;
   389                           ;LCD 4 BIT.h: 30: PORTD=data&0xF0;
   390                           ;LCD 4 BIT.h: 31: RD0=1;
   391                           ;LCD 4 BIT.h: 32: RW=0;
   392                           ;LCD 4 BIT.h: 33: RD1=1;
   393                           ;LCD 4 BIT.h: 34: delay(200);
   394  07A7  27EA  120A  118A   	fcall	PL2	;call to abstracted procedure
   395  07AA  27DE  120A  118A   	fcall	_delay
   396                           ;LCD 4 BIT.h: 35: RD1=0;
   397  07AD  1088               	bcf	8,1
   398                           ;LCD 4 BIT.h: 36: temp1=data<<4;
   399  07AE  0E73               	swapf	lcd_data@data,w
   400  07AF  39F0               	andlw	240
   401  07B0  00F2               	movwf	lcd_data@temp1
   402                           ;LCD 4 BIT.h: 37: PORTD=temp1&0xF0;
   403                           ;LCD 4 BIT.h: 38: RD0=1;
   404                           ;LCD 4 BIT.h: 39: RW=0;
   405                           ;LCD 4 BIT.h: 40: RD1=1;
   406                           ;LCD 4 BIT.h: 41: delay(200);
   407  07B1  27EA  120A  118A   	fcall	PL2	;call to abstracted procedure
   408  07B4  27DE               	fcall	_delay
   409                           ;LCD 4 BIT.h: 42: RD1=0;
   410  07B5  1088               	bcf	8,1
   411  07B6  0008               	return
   412  07B7                     __end_of_lcd_data:	
   413  07B7                     __ptext70:	;; =============== function _main ends ============
   414                           
   415 ;; *************** function _lcd_initialize *****************
   416 ;; Defined at:
   417 ;;		line 47 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\LCD 4 BIT.h"
   418 ;; Parameters:    Size  Location     Type
   419 ;;		None
   420 ;; Auto vars:     Size  Location     Type
   421 ;;		None
   422 ;; Return value:  Size  Location     Type
   423 ;;		None               void
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, pclath, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 17F/0
   428 ;;		On exit  : 17F/0
   429 ;;		Unchanged: FFE80/0
   430 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   431 ;;      Params:         0       0       0       0       0
   432 ;;      Locals:         0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0
   434 ;;      Totals:         0       0       0       0       0
   435 ;;Total ram usage:        0 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; Hardware stack levels required when called:    3
   438 ;; This function calls:
   439 ;;		_lcd_command
   440 ;; This function is called by:
   441 ;;		_main
   442 ;; This function uses a non-reentrant model
   443 ;;
   444  07B7                     _lcd_initialize:	
   445                           ;LCD 4 BIT.h: 48: lcd_command(0x02);
   446                           ; Regs used in _lcd_initialize: [wreg+status,2+status,0+pclath+cstack]
   447  07B7  3002               	movlw	2
   448  07B8  27CD  120A  118A   	fcall	_lcd_command
   449                           ;LCD 4 BIT.h: 49: lcd_command(0x2C);
   450  07BB  302C               	movlw	44
   451  07BC  27CD  120A  118A   	fcall	_lcd_command
   452                           ;LCD 4 BIT.h: 50: lcd_command(0x06);
   453  07BF  3006               	movlw	6
   454  07C0  27CD  120A  118A   	fcall	_lcd_command
   455                           ;LCD 4 BIT.h: 51: lcd_command(0x0c);
   456  07C3  300C               	movlw	12
   457  07C4  27CD  120A  118A   	fcall	_lcd_command
   458                           ;LCD 4 BIT.h: 52: lcd_command(0x01);
   459  07C7  3001               	movlw	1
   460  07C8  27CD  120A  118A   	fcall	_lcd_command
   461                           ;LCD 4 BIT.h: 53: lcd_command(0x80);
   462  07CB  3080               	movlw	128
   463  07CC  2FCD               	ljmp	_lcd_command
   464  07CD                     __end_of_lcd_initialize:	
   465  07CD                     __ptext72:	;; =============== function _display ends ============
   466                           
   467 ;; *************** function _lcd_command *****************
   468 ;; Defined at:
   469 ;;		line 10 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\LCD 4 BIT.h"
   470 ;; Parameters:    Size  Location     Type
   471 ;;  command         1    wreg     unsigned char 
   472 ;; Auto vars:     Size  Location     Type
   473 ;;  command         1    3[COMMON] unsigned char 
   474 ;;  temp            1    2[COMMON] unsigned char 
   475 ;; Return value:  Size  Location     Type
   476 ;;		None               void
   477 ;; Registers used:
   478 ;;		wreg, status,2, status,0, pclath, cstack
   479 ;; Tracked objects:
   480 ;;		On entry : 17F/0
   481 ;;		On exit  : 17F/0
   482 ;;		Unchanged: FFE80/0
   483 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   484 ;;      Params:         0       0       0       0       0
   485 ;;      Locals:         2       0       0       0       0
   486 ;;      Temps:          0       0       0       0       0
   487 ;;      Totals:         2       0       0       0       0
   488 ;;Total ram usage:        2 bytes
   489 ;; Hardware stack levels used:    1
   490 ;; Hardware stack levels required when called:    2
   491 ;; This function calls:
   492 ;;		_delay
   493 ;; This function is called by:
   494 ;;		_lcd_initialize
   495 ;; This function uses a non-reentrant model
   496 ;;
   497  07CD                     _lcd_command:	
   498                           ; Regs used in _lcd_command: [wreg+status,2+status,0+pclath+cstack]
   499                           ;lcd_command@command stored from wreg
   500  07CD  00F3               	movwf	lcd_command@command
   501                           ;LCD 4 BIT.h: 11: unsigned char temp;
   502                           ;LCD 4 BIT.h: 12: PORTD=command&0xF0;
   503                           ;LCD 4 BIT.h: 13: RD0=0;
   504                           ;LCD 4 BIT.h: 14: RW=0;
   505                           ;LCD 4 BIT.h: 15: RD1=1;
   506                           ;LCD 4 BIT.h: 16: delay(200);
   507  07CE  27F5  120A  118A   	fcall	PL3	;call to abstracted procedure
   508  07D1  27DE  120A  118A   	fcall	_delay
   509                           ;LCD 4 BIT.h: 17: RD1=0;
   510  07D4  1088               	bcf	8,1
   511                           ;LCD 4 BIT.h: 18: temp=command<<4;
   512  07D5  0E73               	swapf	lcd_command@command,w
   513  07D6  39F0               	andlw	240
   514  07D7  00F2               	movwf	lcd_command@temp
   515                           ;LCD 4 BIT.h: 19: PORTD=temp&0xF0;
   516                           ;LCD 4 BIT.h: 20: RD0=0;
   517                           ;LCD 4 BIT.h: 21: RW=0;
   518                           ;LCD 4 BIT.h: 22: RD1=1;
   519                           ;LCD 4 BIT.h: 23: delay(200);
   520  07D8  27F5  120A  118A   	fcall	PL3	;call to abstracted procedure
   521  07DB  27DE               	fcall	_delay
   522                           ;LCD 4 BIT.h: 24: RD1=0;
   523  07DC  1088               	bcf	8,1
   524  07DD  0008               	return
   525  07DE                     __end_of_lcd_command:	
   526  07DE                     __ptext74:	;; =============== function _lcd_data ends ============
   527                           
   528 ;; *************** function _delay *****************
   529 ;; Defined at:
   530 ;;		line 5 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\LCD 4 BIT.h"
   531 ;; Parameters:    Size  Location     Type
   532 ;;  a               2    0[COMMON] unsigned int 
   533 ;; Auto vars:     Size  Location     Type
   534 ;;		None
   535 ;; Return value:  Size  Location     Type
   536 ;;		None               void
   537 ;; Registers used:
   538 ;;		wreg
   539 ;; Tracked objects:
   540 ;;		On entry : 17F/0
   541 ;;		On exit  : 17F/0
   542 ;;		Unchanged: FFE80/0
   543 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   544 ;;      Params:         2       0       0       0       0
   545 ;;      Locals:         0       0       0       0       0
   546 ;;      Temps:          0       0       0       0       0
   547 ;;      Totals:         2       0       0       0       0
   548 ;;Total ram usage:        2 bytes
   549 ;; Hardware stack levels used:    1
   550 ;; This function calls:
   551 ;;		Nothing
   552 ;; This function is called by:
   553 ;;		_lcd_command
   554 ;;		_lcd_data
   555 ;;		_main
   556 ;; This function uses a non-reentrant model
   557 ;;
   558  07DE                     _delay:	
   559  07DE                     l968:	;LCD 4 BIT.h: 6: while(a--);
   560                           ; Regs used in _delay: [wreg]
   561                           
   562  07DE  3001               	movlw	1
   563  07DF  02F0               	subwf	delay@a,f
   564  07E0  3000               	movlw	0
   565  07E1  1C03               	skipc
   566  07E2  03F1               	decf	delay@a+1,f
   567  07E3  02F1               	subwf	delay@a+1,f
   568  07E4  0A70               	incf	delay@a,w
   569  07E5  1903               	skipnz
   570  07E6  0A71               	incf	delay@a+1,w
   571  07E7  1903               	btfsc	3,2
   572  07E8  0008               	return
   573  07E9  2FDE               	goto	l968
   574  07EA                     __end_of_delay:	
   575  07EA                     PL2:	
   576  07EA  39F0               	andlw	240
   577  07EB  0088               	movwf	8	;volatile
   578  07EC  1408               	bsf	8,0
   579  07ED  1683               	bsf	3,5	;RP0=1, select bank1
   580  07EE  1114               	bcf	20,2
   581  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   582  07F0  1488               	bsf	8,1
   583  07F1  30C8               	movlw	200
   584  07F2  00F0               	movwf	?_delay
   585  07F3  01F1               	clrf	?_delay+1
   586  07F4  0008               	return
   587  07F5                     PL3:	
   588  07F5  39F0               	andlw	240
   589  07F6  0088               	movwf	8	;volatile
   590  07F7  1008               	bcf	8,0
   591  07F8  1683               	bsf	3,5	;RP0=1, select bank1
   592  07F9  1114               	bcf	20,2
   593  07FA  1283               	bcf	3,5	;RP0=0, select bank0
   594  07FB  1488               	bsf	8,1
   595  07FC  30C8               	movlw	200
   596  07FD  00F0               	movwf	?_delay
   597  07FE  01F1               	clrf	?_delay+1
   598  07FF  0008               	return
   599                           
   600                           	psect	text75
   601  075B                     __ptext75:	;; =============== function _delay ends ============
   602                           
   603 ;; *************** function _adc_read *****************
   604 ;; Defined at:
   605 ;;		line 4 in file "C:\Users\Admin\Desktop\PIC\PIC course\8 channel ADC & LCD\main.c"
   606 ;; Parameters:    Size  Location     Type
   607 ;;		None
   608 ;; Auto vars:     Size  Location     Type
   609 ;;  temp            2    0        unsigned int 
   610 ;; Return value:  Size  Location     Type
   611 ;;		None               void
   612 ;; Registers used:
   613 ;;		wreg
   614 ;; Tracked objects:
   615 ;;		On entry : 17F/0
   616 ;;		On exit  : 17F/0
   617 ;;		Unchanged: FFE80/0
   618 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   619 ;;      Params:         0       0       0       0       0
   620 ;;      Locals:         0       0       0       0       0
   621 ;;      Temps:          0       0       0       0       0
   622 ;;      Totals:         0       0       0       0       0
   623 ;;Total ram usage:        0 bytes
   624 ;; Hardware stack levels used:    1
   625 ;; This function calls:
   626 ;;		Nothing
   627 ;; This function is called by:
   628 ;;		_main
   629 ;; This function uses a non-reentrant model
   630 ;;
   631  075B                     _adc_read:	
   632                           ;main.c: 5: unsigned int temp;
   633                           ;main.c: 6: temp=ADRESH<<8;
   634                           ; Regs used in _adc_read: [wreg]
   635  075B  081E               	movf	30,w	;volatile
   636                           ;main.c: 7: temp=temp+ADRESL;
   637  075C  1683               	bsf	3,5	;RP0=1, select bank1
   638  075D  081E               	movf	30,w	;volatile
   639                           ;main.c: 8: ADIF=0;
   640  075E  1283               	bcf	3,5	;RP0=0, select bank0
   641  075F  130C               	bcf	12,6
   642  0760  0008               	return
   643  0761                     __end_of_adc_read:	
   644                           
   645                           	psect	text76
   646  0000                     __ptext76:	;; =============== function _adc_read ends ============
   647                           
   648  007E                     btemp	set	126	;btemp
   649  007E                     wtemp0	set	126


HI-TECH Software PICC Macro Assembler V9.71 build 6379 
Symbol Table                                                                                   Thu Aug 23 14:38:39 2018

__size_of_lcd_initialize 0016                        pc 0002           __size_of_delay 000C  
                     _RW 04A2                       fsr 0004                      l562 0000  
                    l571 0000                      l580 0000                      l565 0000  
                    l568 0000                      l584 078B                      l577 0000  
                    l962 0000                      l970 0000                      l964 0000  
                    l980 0000                      l972 0000                      l966 0000  
                    l990 0000                      l982 0000                      l974 0000  
                    l968 07DE                      l992 0000                      l984 0000  
                    l976 0000                      l994 0000                      l986 0000  
                    l978 0000                      l988 0000                      l996 0000  
                    l998 0000                      _RD0 0040                      _RD1 0041  
               _adc_read 075B                      fsr0 0004                      indf 0000  
              ?_adc_read 0070               ??_adc_read 0070                  ??_delay 0072  
                   l1000 0000                     l1010 0000                     l1002 0000  
                   l1020 0000                     l1012 0000                     l1004 0000  
                   l1014 0000                     l1006 0000                     l1022 0000  
                   l1030 0000                     l1016 0000                     l1008 0000  
                   l1040 0000                     l1032 0000                     l1018 0000  
                   l1026 0000                     l1050 0000                     l1042 0000  
                   l1034 0000                     l1028 0795                     l1044 0000  
                   l1036 0000                     l1046 0000                     l1038 0000  
                   l1048 0781       lcd_command@command 0073                     _ADIF 0066  
               __ptext70 07B7                 __ptext71 0793                 __ptext72 07CD  
               __ptext73 07A6                 __ptext74 07DE                 __ptext75 075B  
               __ptext76 0000                 __ptext69 0000                     STR_1 0013  
       __size_of_display 0013                 _lcd_data 07A6                ?_lcd_data 0070  
                   _main 0761                     btemp 007E               ??_lcd_data 0072  
                   start 0000        __size_of_adc_read 0006      start_initialization 0757  
              stringcode 000D        __size_of_lcd_data 0011                    ?_main 0070  
             display@len 0074                 display@a 0076            __end_of_delay 07EA  
        __end_of_display 07A6                    _PORTD 0008                    _TRISA 0085  
                  _TRISD 0088                    _TRISE 0089                __pstrings 0003  
         __pcstackCOMMON 0070                    _delay 07DE                    pclath 000A  
            _lcd_command 07CD      __end_of_lcd_command 07DE                    status 0003  
                  wtemp0 007E            __size_of_main 0032              __stringbase 0012  
           ?_lcd_command 0070                   ??_main 0077                  _display 0793  
       __end_of_adc_read 0761                 ?_display 0074               __pmaintext 0761  
   __size_of_lcd_command 0011                ??_display 0075           _lcd_initialize 07B7  
        ?_lcd_initialize 0070                   ?_delay 0070                 stringdir 000D  
               stringtab 0003                   _ADCON0 001F                   _ADCON1 009F  
        lcd_command@temp 0072                   _ADRESH 001E                   _ADRESL 009E  
            display@word 0075             __end_of_main 0793         ??_lcd_initialize 0074  
   end_of_initialization 0757         __end_of_lcd_data 07B7   __end_of_lcd_initialize 07CD  
                 delay@a 0070            ??_lcd_command 0072            lcd_data@temp1 0072  
           lcd_data@data 0073  
